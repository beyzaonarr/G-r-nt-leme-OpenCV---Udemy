#GRADYANLAR

import cv2
import matplotlib.pyplot as plt

#resmi içe aktar
img = cv2.imread("sudoku.jpg", 0)
plt.figure(), plt.imshow(img, cmap = "gray"), plt.axis("off"), plt.title("Orijinal Img")

# X gradyan
sobelx = cv2.Sobel(img, ddepth = cv2.CV_16S, dx = 1, dy = 0, ksize = 5) # dikey kenarlar belirgin amaç yatay kenarları bulmak
plt.figure(), plt.imshow(sobelx, cmap = "gray"), plt.axis("off"), plt.title(" Sobel X")

# Y Gradyan
sobely = cv2.Sobel(img, ddepth = cv2.CV_16S, dx = 0, dy = 1, ksize = 5) #yatay kenarlar belirgin amaç dikey kenarları bulmak
plt.figure(), plt.imshow(sobely, cmap = "gray"), plt.axis("off"), plt.title("Sobel Y")

"""
Bu OpenCV fonksiyonu, Sobel türevini (gradient) hesaplar. Görüntüdeki kenarları bulmak için kullanılır. 
Şimdi parametrelerini inceleyelim:

img → İşlem yapılacak görüntü (Örneğin, bir grayscale resim olmalı).
ddepth = cv2.CV_16S → Çıktının veri tipi.
Sobel işlemi negatif değerler üretebileceğinden CV_16S (16-bit signed integer) kullanılıyor. Çünkü uint8 (CV_8U) kullanırsak negatif değerleri kaybederiz.
dx = 0, dy = 1 →
dx = 0 → X ekseni boyunca türev alma yok.
dy = 1 → Y ekseni boyunca türev alınıyor.
➜ Yani dikey kenarları buluyoruz.
ksize = 5 →
Çekirdek (kernel) boyutu 5x5 seçilmiş.
Büyük bir değer daha yumuşak (smooth) kenarlar verir.
Bu kod, dikey kenarları tespit etmek için 5x5 Sobel çekirdeğiyle img üzerinde Sobel türevini alıyor.
"""

# Laplacian gradyan
laplacian = cv2.Laplacian(img, ddepth = cv2.CV_16S) #Laplacian hem dikey hem yatay belirgin
plt.figure(), plt.imshow(laplacian, cmap = "gray"), plt.axis("off"), plt.title("Laplacian ")
